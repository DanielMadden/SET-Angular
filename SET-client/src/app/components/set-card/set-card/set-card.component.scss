@import "../../../shared/variables.scss";
.set-card {
  box-shadow: 3px 3px 0px 0px rgba(0, 0, 0, 0.3);
  $background-color: "background-color";
  #{$background-color}: $card-color;
  // background-color: $card-color;

  // @include screen-large-x {
  //   $ratio: 0.9;
  //   width: $card-width * $ratio;
  //   height: $card-height * $ratio;
  //   border-radius: $card-corner-radius * $ratio;
  //   padding: $card-padding * $ratio;
  // }

  // @include screen-large-x-x {
  //   width: $card-width;
  //   height: $card-height;
  //   border-radius: $card-corner-radius;
  //   padding: $card-padding;
  // }

  @include responsive-properties(
    (
      "width": $card-width,
      "height": $card-height,
      "border-radius": $card-corner-radius,
      "padding": $card-padding,
    )
  );

  &.in-game-log {
    // @include screen-large-x-x {
    width: $card-game-log-width;
    height: $card-game-log-height;
    border-radius: $card-corner-radius;
    padding: $card-padding * $card-game-log-ratio;
    // }
    .svg-container {
      padding: $card-svg-padding * $card-game-log-ratio;
    }
  }

  &.highlighted {
    box-shadow: 0px 0px 10px 10px rgba(255, 251, 0, 0.5);
  }

  .svg-container {
    padding: $card-svg-padding;
  }

  path {
    stroke-width: 2;
  }

  &.shade-hollow {
    path {
      fill: none;
    }
  }

  &.color-1 {
    path {
      stroke: var(--color-1);
    }
    &.shade-solid {
      path {
        fill: var(--color-1);
      }
    }
  }

  &.color-2 {
    path {
      stroke: var(--color-2);
    }
    &.shade-solid {
      path {
        fill: var(--color-2);
      }
    }
  }

  &.color-3 {
    path {
      stroke: var(--color-3);
    }
    &.shade-solid {
      path {
        fill: var(--color-3);
      }
    }
  }

  &.count-1 {
    .svg-container-2,
    .svg-container-3 {
      display: none;
    }
  }

  &.count-2 {
    .svg-container-3 {
      display: none;
    }
  }
}
